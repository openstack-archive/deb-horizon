Description: CVE-2014-3473_3474_3475 Fix multiple Cross-Site Scripting (XSS) vulnerabilities.
  * Ensure user emails are properly escaped
 .
 User emails in the Users and Groups panel are being passed through the
 urlize filter to transform them into clickable links. However, urlize
 expects input to be already escaped and safe. We should make sure to
 escape the strings first as email addresses are not validated and can
 contain any type of string.
  * Ensure network names are properly escaped in the Launch Instance menu
  * Escape the URLs generated for the Horizon tables
 When generating the Horizon tables, there was an assumption that only
 the anchor text needed to be escaped. However some URLs are generated
 based on user-provided data and should be escaped as well. Also escape
 the link attributes for good measure.
  * Use 'reverse' to generate the Resource URLs in the stacks tables
Bug-Ubuntu: https://bugs.launchpad.net/bug/1320235
Bug-Ubuntu: https://bugs.launchpad.net/bug/1322197
Bug-Ubuntu: https://bugs.launchpad.net/bug/1308727
Bug-Debian: https://bugs.debian.org/754255
Author: Julie Pichon <jpichon@redhat.com>
Date: Thu, 22 May 2014 16:45:03 +0100
Change-Id: Ic8a92e69f66c2d265a802f350e30f091181aa42e

Index: horizon/horizon/static/horizon/js/horizon.instances.js
===================================================================
--- horizon.orig/horizon/static/horizon/js/horizon.instances.js	2014-07-09 16:09:32.000000000 +0800
+++ horizon/horizon/static/horizon/js/horizon.instances.js	2014-07-09 16:10:00.000000000 +0800
@@ -51,8 +51,15 @@
     $(this.get_network_element("")).each(function(){
       var $this = $(this);
       var $input = $this.children("input");
+      var name = $this.text().replace(/^\s+/,"")
+                             .replace(/&/g, '&amp;')
+                             .replace(/</g, '&lt;')
+                             .replace(/>/g, '&gt;')
+                             .replace(/"/g, '&quot;')
+                             .replace(/'/g, '&#x27;')
+                             .replace(/\//g, '&#x2F;');
       var network_property = {
-        name:$this.text().replace(/^\s+/,""),
+        name:name,
         id:$input.attr("id"),
         value:$input.attr("value")
       };
Index: horizon/horizon/tables/base.py
===================================================================
--- horizon.orig/horizon/tables/base.py	2014-07-09 16:09:32.000000000 +0800
+++ horizon/horizon/tables/base.py	2014-07-09 16:10:00.000000000 +0800
@@ -676,7 +676,9 @@
             link_classes = ' '.join(self.column.link_classes)
             # Escape the data inside while allowing our HTML to render
             data = mark_safe('<a href="%s" class="%s">%s</a>' %
-                             (self.url, link_classes, escape(unicode(data))))
+                             (escape(self.url),
+                              escape(link_classes),
+                              escape(unicode(data))))
         return data
 
     @property
Index: horizon/openstack_dashboard/dashboards/admin/groups/tables.py
===================================================================
--- horizon.orig/openstack_dashboard/dashboards/admin/groups/tables.py	2014-07-09 16:09:32.000000000 +0800
+++ horizon/openstack_dashboard/dashboards/admin/groups/tables.py	2014-07-09 16:10:00.000000000 +0800
@@ -161,7 +161,8 @@
 class UsersTable(tables.DataTable):
     name = tables.Column('name', verbose_name=_('User Name'))
     email = tables.Column('email', verbose_name=_('Email'),
-                          filters=[defaultfilters.urlize])
+                          filters=[defaultfilters.escape,
+                                   defaultfilters.urlize])
     id = tables.Column('id', verbose_name=_('User ID'))
     enabled = tables.Column('enabled', verbose_name=_('Enabled'),
                             status=True,
Index: horizon/openstack_dashboard/dashboards/admin/users/tables.py
===================================================================
--- horizon.orig/openstack_dashboard/dashboards/admin/users/tables.py	2014-04-18 09:11:38.000000000 +0800
+++ horizon/openstack_dashboard/dashboards/admin/users/tables.py	2014-07-09 16:10:00.000000000 +0800
@@ -131,7 +131,9 @@
     email = tables.Column('email', verbose_name=_('Email'),
                           filters=(lambda v: defaultfilters
                                    .default_if_none(v, ""),
-                                   defaultfilters.urlize))
+                                   defaultfilters.escape,
+                                   defaultfilters.urlize)
+                          )
     # Default tenant is not returned from Keystone currently.
     #default_tenant = tables.Column('default_tenant',
     #                               verbose_name=_('Default Project'))
Index: horizon/openstack_dashboard/dashboards/project/stacks/tables.py
===================================================================
--- horizon.orig/openstack_dashboard/dashboards/project/stacks/tables.py	2014-07-09 16:09:32.000000000 +0800
+++ horizon/openstack_dashboard/dashboards/project/stacks/tables.py	2014-07-09 16:10:00.000000000 +0800
@@ -114,11 +114,16 @@
                        ChangeStackTemplate)
 
 
+def get_resource_url(obj):
+    return urlresolvers.reverse('horizon:project:stacks:resource',
+                                args=(obj.stack_id, obj.resource_name))
+
+
 class EventsTable(tables.DataTable):
 
     logical_resource = tables.Column('resource_name',
                                      verbose_name=_("Stack Resource"),
-                                     link=lambda d: d.resource_name,)
+                                     link=get_resource_url)
     physical_resource = tables.Column('physical_resource_id',
                                       verbose_name=_("Resource"),
                                       link=mappings.resource_to_url)
@@ -163,7 +168,7 @@
 
     logical_resource = tables.Column('resource_name',
                                      verbose_name=_("Stack Resource"),
-                                     link=lambda d: d.resource_name)
+                                     link=get_resource_url)
     physical_resource = tables.Column('physical_resource_id',
                                      verbose_name=_("Resource"),
                                      link=mappings.resource_to_url)
Index: horizon/openstack_dashboard/dashboards/project/stacks/tabs.py
===================================================================
--- horizon.orig/openstack_dashboard/dashboards/project/stacks/tabs.py	2014-07-09 16:09:32.000000000 +0800
+++ horizon/openstack_dashboard/dashboards/project/stacks/tabs.py	2014-07-09 16:10:00.000000000 +0800
@@ -79,6 +79,9 @@
             stack_identifier = '%s/%s' % (stack.stack_name, stack.id)
             events = api.heat.events_list(self.request, stack_identifier)
             LOG.debug('got events %s' % events)
+            # The stack id is needed to generate the resource URL.
+            for event in events:
+                event.stack_id = stack.id
         except Exception:
             events = []
             messages.error(request, _(
@@ -99,6 +102,9 @@
             stack_identifier = '%s/%s' % (stack.stack_name, stack.id)
             resources = api.heat.resources_list(self.request, stack_identifier)
             LOG.debug('got resources %s' % resources)
+            # The stack id is needed to generate the resource URL.
+            for r in resources:
+                r.stack_id = stack.id
         except Exception:
             resources = []
             messages.error(request, _(
