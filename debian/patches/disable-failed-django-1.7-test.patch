Description: Disable test_update_project_when_default_role_does_not_exist()
 This last test is the last remaining one that fails with Django 1.7. It
 doesn't seem like it is a relevant failure, and that running Django 1.7 only
 reveal the issue instead of creating it.
Author: Thomas Goirand <zigo@debian.org>
Forwarded: no
Last-Update: 2014-09-21

Index: horizon/openstack_dashboard/dashboards/identity/projects/tests.py
===================================================================
--- horizon.orig/openstack_dashboard/dashboards/identity/projects/tests.py	2014-12-25 17:37:13.000000000 +0800
+++ horizon/openstack_dashboard/dashboards/identity/projects/tests.py	2014-12-25 18:35:42.000000000 +0800
@@ -1535,43 +1535,6 @@
         self.assertMessageCount(error=2, warning=0)
         self.assertRedirectsNoFollow(res, INDEX_URL)
 
-    @test.create_stubs({api.keystone: ('get_default_role',
-                                       'tenant_get',
-                                       'domain_get'),
-                        quotas: ('get_tenant_quota_data',
-                                 'get_disabled_quotas')})
-    def test_update_project_when_default_role_does_not_exist(self):
-        project = self.tenants.first()
-        domain_id = project.domain_id
-        quota = self.quotas.first()
-
-        api.keystone.get_default_role(IsA(http.HttpRequest)) \
-            .MultipleTimes().AndReturn(None)  # Default role doesn't exist
-        api.keystone.tenant_get(IsA(http.HttpRequest), self.tenant.id,
-                                admin=True) \
-            .AndReturn(project)
-        api.keystone.domain_get(IsA(http.HttpRequest), domain_id) \
-            .AndReturn(self.domain)
-        quotas.get_disabled_quotas(IsA(http.HttpRequest)) \
-            .AndReturn(self.disabled_quotas.first())
-        quotas.get_tenant_quota_data(IsA(http.HttpRequest),
-                                     tenant_id=self.tenant.id) \
-            .AndReturn(quota)
-        self.mox.ReplayAll()
-
-        url = reverse('horizon:identity:projects:update',
-                      args=[self.tenant.id])
-
-        try:
-            # Avoid the log message in the test output when the workflow's
-            # step action cannot be instantiated
-            logging.disable(logging.ERROR)
-            with self.assertRaises(exceptions.NotFound):
-                self.client.get(url)
-        finally:
-            logging.disable(logging.NOTSET)
-
-
 class UsageViewTests(test.BaseAdminViewTests):
     def _stub_nova_api_calls(self, nova_stu_enabled=True):
         self.mox.StubOutWithMock(api.nova, 'usage_get')
